version: "2.1"

services:
  dev_mq:
    image: rabbitmq:3-management
    hostname: dev_mq
    container_name: dev_mq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 3s
      retries: 10
    ports:
      - 5672:5672
      - 15672:15672
#    volumes:
#      - "rabbitmq_data:/var/lib/rabbitmq"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  app_dev: &app
    image: golang:1.19.13-alpine
    container_name: app_dev
    volumes:
      - $PWD:/app
      - ~/.aws:/root/.aws
    entrypoint: ["tail", "-f", "/dev/null"]
    profiles: ["default"]

  app_dev-mitm:
    <<: *app
    entrypoint: ["/app/.dev/entrypoint.sh"]
    environment:
      - http_proxy=mitmproxy:8080
      - https_proxy=mitmproxy:8080
    profiles: ["dev-mitm"]

  mitmproxy:
    image: mitmproxy/mitmproxy:10.0.0
    container_name: mitmproxy
    volumes:
      - s3scanner_mitmproxy:/home/mitmproxy/.mitmproxy
    entrypoint: ["mitmweb", "--web-host=0.0.0.0", "--no-web-open-browser"]
    ports:
      - "8081:8081"
    profiles: ["dev-mitm"]

  db_dev:
    image: postgres:12-alpine
    container_name: db_dev
    volumes:
      - db_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example

volumes:
  db_dev:
  s3scanner_mitmproxy:
